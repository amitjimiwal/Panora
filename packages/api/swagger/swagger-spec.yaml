openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_hello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /health:
    get:
      operationId: getHealth
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: number
  /protected:
    get:
      operationId: getHelloProtected
      summary: ''
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /auth/register:
    post:
      operationId: signUp
      summary: Register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags: &ref_0
        - auth
  /auth/login:
    post:
      operationId: signIn
      summary: Log In
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: ''
      tags: *ref_0
  /auth/users:
    get:
      operationId: getPanoraCoreUsers
      summary: Get users
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /auth/profile:
    get:
      operationId: AuthController_getProfile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyUserDto'
        '201':
          description: ''
      tags: *ref_0
  /auth/api-keys:
    get:
      operationId: getApiKeys
      summary: Retrieve API Keys
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  /auth/api-keys/{id}:
    delete:
      operationId: deleteApiKey
      summary: Delete API Keys
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
        '201':
          description: ''
      tags: *ref_0
  /auth/generate-apikey:
    post:
      operationId: generateApiKey
      summary: Create API Key
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyDto'
      responses:
        '201':
          description: ''
      tags: *ref_0
  /auth/refresh-token:
    post:
      operationId: refreshAccessToken
      summary: Refresh Access Token
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshDto'
      responses:
        '201':
          description: ''
      tags: *ref_0
  /connections/oauth/callback:
    get:
      operationId: handleOAuthCallback
      summary: Capture oAuth callback
      parameters:
        - name: code
          required: true
          in: query
          schema:
            type: string
        - name: state
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: &ref_1
        - connections
  /connections/apikey/callback:
    post:
      operationId: handleApiKeyCallback
      summary: Capture api key callback
      parameters:
        - name: state
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodyDataType'
      responses:
        '201':
          description: ''
      tags: *ref_1
  /connections:
    get:
      operationId: list
      summary: List Connections
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_1
  /connections/list:
    get:
      operationId: ConnectionsController_list2
      parameters:
        - name: projectid
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
  /webhook:
    get:
      operationId: getWebhooksMetadata
      summary: 'Retrieve webhooks metadata '
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_2
        - webhook
    post:
      operationId: createWebhookMetadata
      summary: Add webhook metadata
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookDto'
      responses:
        '201':
          description: ''
      tags: *ref_2
  /webhook/{id}:
    delete:
      operationId: deleteWebhook
      summary: Delete Webhook
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
        '201':
          description: ''
      tags: *ref_2
    put:
      operationId: updateWebhookStatus
      summary: Update webhook status
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_2
  /webhook/verifyEvent:
    post:
      operationId: verifyEvent
      summary: Verify payload sgnature of the webhook
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureVerificationDto'
      responses:
        '201':
          description: ''
      tags: *ref_2
  /managed-webhooks/{id_connection}:
    get:
      operationId: getManagedWebhooks
      summary: Retrieve managed webhooks
      parameters:
        - name: id_connection
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: &ref_3
        - managed-webhooks
    put:
      operationId: updateManagedWebhooksStatus
      summary: Update managed webhook status
      parameters:
        - name: id_connection
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_3
  /managed-webhooks:
    post:
      operationId: createManagedWebhook
      summary: Create managed webhook
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedWebhooksDto'
      responses:
        '201':
          description: ''
      tags: *ref_3
  /managed-webhooks/remoteThirdPartyCreation:
    post:
      operationId: createRemoteThirdPartyWebhook
      summary: Create Remote Third Party Webhook
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteThirdPartyCreationDto'
      responses:
        '201':
          description: ''
      tags: *ref_3
  /mw/{endpoint_uuid}:
    post:
      operationId: handleThirdPartyWebhook
      summary: Handle Third Party Webhook
      parameters:
        - name: endpoint_uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - mw
  /ticketing/tickets:
    get:
      operationId: getTickets
      summary: List a batch of Tickets
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTicketOutput'
      tags: &ref_4
        - ticketing/tickets
      security: &ref_5
        - JWT: []
    post:
      operationId: addTicket
      summary: Create a Ticket
      description: Create a ticket in any supported Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedTicketInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTicketOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTicketOutput'
      tags: *ref_4
      security: *ref_5
  /ticketing/tickets/{id}:
    get:
      operationId: getTicket
      summary: Retrieve a Ticket
      description: Retrieve a ticket from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the `ticket` you want to retrive.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTicketOutput'
      tags: *ref_4
      security: *ref_5
  /ticketing/users:
    get:
      operationId: getTicketingUsers
      summary: List a batch of Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: &ref_6
        - ticketing/users
      security: &ref_7
        - JWT: []
  /ticketing/users/{id}:
    get:
      operationId: getTicketingUser
      summary: Retrieve a User
      description: Retrieve a user from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the user you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: *ref_6
      security: *ref_7
  /ticketing/accounts:
    get:
      operationId: getTicketingAccounts
      summary: List a batch of Accounts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAccountOutput'
      tags: &ref_8
        - ticketing/accounts
      security: &ref_9
        - JWT: []
  /ticketing/accounts/{id}:
    get:
      operationId: getTicketingAccount
      summary: Retrieve an Account
      description: Retrieve an account from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the account you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAccountOutput'
      tags: *ref_8
      security: *ref_9
  /ticketing/contacts:
    get:
      operationId: getTicketingContacts
      summary: List all Contacts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
      tags: &ref_10
        - ticketing/contacts
      security: &ref_11
        - JWT: []
  /ticketing/contacts/{id}:
    get:
      operationId: getTicketingContact
      summary: Retrieve a Contact
      description: Retrieve a contact from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the contact you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
      tags: *ref_10
      security: *ref_11
  /sync/status/{vertical}:
    get:
      operationId: getSyncStatus
      summary: Retrieve sync status of a certain vertical
      parameters:
        - name: vertical
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: &ref_12
        - sync
  /sync/resync:
    post:
      operationId: resync
      summary: Resync common objects across a vertical
      parameters: []
      responses:
        '200':
          description: ''
        '201':
          description: ''
      tags: *ref_12
  /crm/companies:
    get:
      operationId: getCompanies
      summary: List a batch of Companies
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCompanyOutput'
      tags: &ref_13
        - crm/companies
      security: &ref_14
        - JWT: []
    post:
      operationId: addCrmCompany
      summary: Create a Company
      description: Create a company in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCompanyInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCompanyOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCompanyOutput'
      tags: *ref_13
      security: *ref_14
  /crm/companies/{id}:
    get:
      operationId: getCrmCompany
      summary: Retrieve a Company
      description: Retrieve a company from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the company you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCompanyOutput'
      tags: *ref_13
      security: *ref_14
  /crm/contacts:
    get:
      operationId: listCrmContacts
      summary: List CRM Contacts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
      tags: &ref_15
        - crm/contacts
      security: &ref_16
        - JWT: []
    post:
      operationId: addCrmContact
      summary: Create CRM Contact
      description: Create a contact in any supported CRM
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original CRM software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedContactInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedContactOutput'
      tags: *ref_15
      security: *ref_16
  /crm/contacts/{id}:
    get:
      operationId: getCrmContact
      summary: Retrieve a CRM Contact
      description: Retrieve a contact from any connected CRM
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the `contact` you want to retrive.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original CRM software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
      tags: *ref_15
      security: *ref_16
  /crm/deals:
    get:
      operationId: getDeals
      summary: List a batch of Deals
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDealOutput'
      tags: &ref_17
        - crm/deals
      security: &ref_18
        - JWT: []
    post:
      operationId: addDeal
      summary: Create a Deal
      description: Create a deal in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedDealInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDealOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedDealOutput'
      tags: *ref_17
      security: *ref_18
  /crm/deals/{id}:
    get:
      operationId: getDeal
      summary: Retrieve a Deal
      description: Retrieve a deal from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the deal you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDealOutput'
      tags: *ref_17
      security: *ref_18
  /crm/engagements:
    get:
      operationId: getEngagements
      summary: List a batch of Engagements
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEngagementOutput'
      tags: &ref_19
        - crm/engagements
      security: &ref_20
        - JWT: []
    post:
      operationId: addEngagement
      summary: Create a Engagement
      description: Create a engagement in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedEngagementInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEngagementOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedEngagementOutput'
      tags: *ref_19
      security: *ref_20
  /crm/engagements/{id}:
    get:
      operationId: getEngagement
      summary: Retrieve a Engagement
      description: Retrieve a engagement from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the engagement you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEngagementOutput'
      tags: *ref_19
      security: *ref_20
  /crm/notes:
    get:
      operationId: getNotes
      summary: List a batch of Notes
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedNoteOutput'
      tags: &ref_21
        - crm/notes
      security: &ref_22
        - JWT: []
    post:
      operationId: addNote
      summary: Create a Note
      description: Create a note in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedNoteInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedNoteOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedNoteOutput'
      tags: *ref_21
      security: *ref_22
  /crm/notes/{id}:
    get:
      operationId: getNote
      summary: Retrieve a Note
      description: Retrieve a note from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the note you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedNoteOutput'
      tags: *ref_21
      security: *ref_22
  /crm/stages:
    get:
      operationId: getStages
      summary: List a batch of Stages
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedStageOutput'
      tags: &ref_23
        - crm/stages
      security: &ref_24
        - JWT: []
  /crm/stages/{id}:
    get:
      operationId: getStage
      summary: Retrieve a Stage
      description: Retrieve a stage from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the stage you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedStageOutput'
      tags: *ref_23
      security: *ref_24
  /crm/tasks:
    get:
      operationId: getTasks
      summary: List a batch of Tasks
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTaskOutput'
      tags: &ref_25
        - crm/tasks
      security: &ref_26
        - JWT: []
    post:
      operationId: addTask
      summary: Create a Task
      description: Create a task in any supported Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedTaskInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTaskOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTaskOutput'
      tags: *ref_25
      security: *ref_26
  /crm/tasks/{id}:
    get:
      operationId: getTask
      summary: Retrieve a Task
      description: Retrieve a task from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the task you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTaskOutput'
      tags: *ref_25
      security: *ref_26
  /crm/users:
    get:
      operationId: getCrmUsers
      summary: List a batch of Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: &ref_27
        - crm/users
      security: &ref_28
        - JWT: []
  /crm/users/{id}:
    get:
      operationId: getCrmUser
      summary: Retrieve a User
      description: Retrieve a user from any connected Crm software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the user you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Crm software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: *ref_27
      security: *ref_28
  /ticketing/collections:
    get:
      operationId: getCollections
      summary: List a batch of Collections
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCollectionOutput'
      tags: &ref_29
        - ticketing/collections
      security: &ref_30
        - JWT: []
  /ticketing/collections/{id}:
    get:
      operationId: getCollection
      summary: Retrieve a Collection
      description: Retrieve a collection from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the collection you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCollectionOutput'
      tags: *ref_29
      security: *ref_30
  /ticketing/comments:
    get:
      operationId: getComments
      summary: List a batch of Comments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCommentOutput'
      tags: &ref_31
        - ticketing/comments
      security: &ref_32
        - JWT: []
    post:
      operationId: addComment
      summary: Create a Comment
      description: Create a comment in any supported Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCommentInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCommentOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCommentOutput'
      tags: *ref_31
      security: *ref_32
  /ticketing/comments/{id}:
    get:
      operationId: getComment
      summary: Retrieve a Comment
      description: Retrieve a comment from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the `comment` you want to retrive.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCommentOutput'
      tags: *ref_31
      security: *ref_32
  /ticketing/tags:
    get:
      operationId: getTicketingTags
      summary: List a batch of Tags
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTagOutput'
      tags: &ref_33
        - ticketing/tags
      security: &ref_34
        - JWT: []
  /ticketing/tags/{id}:
    get:
      operationId: getTicketingTag
      summary: Retrieve a Tag
      description: Retrieve a tag from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the tag you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTagOutput'
      tags: *ref_33
      security: *ref_34
  /ticketing/teams:
    get:
      operationId: getTeams
      summary: List a batch of Teams
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTeamOutput'
      tags: &ref_35
        - ticketing/teams
      security: &ref_36
        - JWT: []
  /ticketing/teams/{id}:
    get:
      operationId: getTeam
      summary: Retrieve a Team
      description: Retrieve a team from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the team you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTeamOutput'
      tags: *ref_35
      security: *ref_36
  /linked-users:
    post:
      operationId: addLinkedUser
      summary: Add Linked User
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLinkedUserDto'
      responses:
        '201':
          description: ''
      tags: &ref_37
        - linked-users
    get:
      operationId: fetchLinkedUsers
      summary: Retrieve Linked Users
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_37
  /linked-users/batch:
    post:
      operationId: addBatchLinkedUsers
      summary: Add Batch Linked Users
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchLinkedUserDto'
      responses:
        '201':
          description: ''
      tags: *ref_37
  /linked-users/single:
    get:
      operationId: getLinkedUser
      summary: Retrieve a Linked User
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_37
  /linked-users/fromRemoteId:
    get:
      operationId: linkedUserFromRemoteId
      summary: Retrieve a Linked User From A Remote Id
      parameters:
        - name: remoteId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_37
  /organisations:
    get:
      operationId: getOrganisations
      summary: Retrieve Organisations
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_38
        - organisations
  /organisations/create:
    post:
      operationId: createOrganisation
      summary: Create an Organisation
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationDto'
      responses:
        '201':
          description: ''
      tags: *ref_38
  /projects:
    get:
      operationId: getProjects
      summary: Retrieve projects
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_39
        - projects
    post:
      operationId: createProject
      summary: Create a project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectDto'
      responses:
        '201':
          description: ''
      tags: *ref_39
  /field-mappings/entities:
    get:
      operationId: getFieldMappingsEntities
      summary: Retrieve field mapping entities
      parameters: []
      responses:
        '200':
          description: ''
      tags: &ref_40
        - field-mappings
  /field-mappings/attribute:
    get:
      operationId: getFieldMappings
      summary: Retrieve field mappings
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_40
  /field-mappings/value:
    get:
      operationId: getFieldMappingValues
      summary: Retrieve field mappings values
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_40
  /field-mappings/define:
    post:
      operationId: defineTargetField
      summary: Define target Field
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefineTargetFieldDto'
      responses:
        '201':
          description: ''
      tags: *ref_40
  /field-mappings:
    post:
      operationId: createCustomField
      summary: Create Custom Field
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldCreateDto'
      responses:
        '201':
          description: ''
      tags: *ref_40
  /field-mappings/map:
    post:
      operationId: mapField
      summary: Map Custom Field
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapFieldToProviderDto'
      responses:
        '201':
          description: ''
      tags: *ref_40
  /field-mappings/properties:
    get:
      operationId: getCustomProviderProperties
      summary: Retrieve Custom Properties
      parameters:
        - name: linkedUserId
          required: true
          in: query
          schema:
            type: string
        - name: providerId
          required: true
          in: query
          schema:
            type: string
        - name: vertical
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_40
  /events:
    get:
      operationId: getPanoraCoreEvents
      summary: Retrieve Events
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            default: 10
            type: number
      responses:
        '200':
          description: ''
      tags: &ref_41
        - events
  /events/count:
    get:
      operationId: getEventsCount
      summary: Retrieve Events Count
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: number
      tags: *ref_41
  /magic-links:
    post:
      operationId: createMagicLink
      summary: Create a Magic Link
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMagicLinkDto'
      responses:
        '201':
          description: ''
      tags: &ref_42
        - magic-links
    get:
      operationId: getMagicLinks
      summary: Retrieve Magic Links
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_42
  /magic-links/single:
    get:
      operationId: getMagicLink
      summary: Retrieve a Magic Link
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_42
  /passthrough:
    post:
      operationId: passthroughRequest
      summary: Make a passthrough request
      parameters:
        - name: integrationId
          required: true
          in: query
          schema:
            type: string
        - name: linkedUserId
          required: true
          in: query
          schema:
            type: string
        - name: vertical
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassThroughRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassThroughResponse'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassThroughResponse'
      tags:
        - passthrough
  /connections-strategies/create:
    post:
      operationId: createConnectionStrategy
      summary: Create Connection Strategy
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConnectionStrategyDto'
      responses:
        '201':
          description: ''
      tags: &ref_43
        - connections-strategies
  /connections-strategies/toggle:
    post:
      operationId: toggleConnectionStrategy
      summary: Activate/Deactivate Connection Strategy
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleStrategyDto'
      responses:
        '201':
          description: ''
      tags: *ref_43
  /connections-strategies/delete:
    post:
      operationId: deleteConnectionStrategy
      summary: Delete Connection Strategy
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCSDto'
      responses:
        '201':
          description: ''
      tags: *ref_43
  /connections-strategies/update:
    post:
      operationId: updateConnectionStrategy
      summary: Update Connection Strategy
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCSDto'
      responses:
        '201':
          description: ''
      tags: *ref_43
  /connections-strategies/credentials:
    post:
      operationId: getConnectionStrategyCredentials
      summary: Get Connection Strategy Credential
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStrategyCredentials'
      responses:
        '201':
          description: ''
      tags: *ref_43
  /connections-strategies/getCredentials:
    get:
      operationId: getCredentials
      summary: Fetch credentials info needed for connections
      parameters:
        - name: projectId
          required: true
          in: query
          schema:
            type: string
        - name: type
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_43
  /connections-strategies/getConnectionStrategiesForProject:
    get:
      operationId: getConnectionStrategiesForProject
      summary: Fetch All Connection Strategies for Project
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_43
  /project-connectors:
    post:
      operationId: updateConnectorsToProject
      summary: Update Connectors for a project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectConnectorsDto'
      responses:
        '201':
          description: ''
      tags: &ref_44
        - project-connectors
    get:
      operationId: getConnectorsFromProject
      summary: Retrieve connectors by Project Id
      parameters:
        - name: projectId
          required: true
          in: query
          schema:
            type: string
        - name: getConnectorsFromProject
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_44
  /hris/bankinfo:
    get:
      operationId: getBankinfos
      summary: List a batch of Bankinfos
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedBankInfoOutput'
      tags: &ref_45
        - hris/bankinfo
  /hris/bankinfo/{id}:
    get:
      operationId: getBankinfo
      summary: Retrieve a Bankinfo
      description: Retrieve a bankinfo from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the bankinfo you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedBankInfoOutput'
      tags: *ref_45
  /hris/benefit:
    get:
      operationId: getBenefits
      summary: List a batch of Benefits
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedBenefitOutput'
      tags: &ref_46
        - hris/benefit
  /hris/benefit/{id}:
    get:
      operationId: getBenefit
      summary: Retrieve a Benefit
      description: Retrieve a benefit from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the benefit you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedBenefitOutput'
      tags: *ref_46
  /hris/company:
    get:
      operationId: getCompanys
      summary: List a batch of Companys
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCompanyOutput'
      tags:
        - hris/company
  /hris/dependent:
    get:
      operationId: getDependents
      summary: List a batch of Dependents
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDependentOutput'
      tags: &ref_47
        - hris/dependent
  /hris/dependent/{id}:
    get:
      operationId: getDependent
      summary: Retrieve a Dependent
      description: Retrieve a dependent from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the dependent you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDependentOutput'
      tags: *ref_47
  /hris/employeepayrollrun:
    get:
      operationId: getEmployeePayrollRuns
      summary: List a batch of EmployeePayrollRuns
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmployeePayrollRunOutput'
      tags: &ref_48
        - hris/employeepayrollrun
  /hris/employeepayrollrun/{id}:
    get:
      operationId: getEmployeePayrollRun
      summary: Retrieve a EmployeePayrollRun
      description: Retrieve a employeepayrollrun from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the employeepayrollrun you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmployeePayrollRunOutput'
      tags: *ref_48
  /hris/employee:
    get:
      operationId: getEmployees
      summary: List a batch of Employees
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmployeeOutput'
      tags: &ref_49
        - hris/employee
    post:
      operationId: addEmployee
      summary: Create a Employee
      description: Create a employee in any supported Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedEmployeeInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmployeeOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedEmployeeOutput'
      tags: *ref_49
  /hris/employee/{id}:
    get:
      operationId: getEmployee
      summary: Retrieve a Employee
      description: Retrieve a employee from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the employee you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmployeeOutput'
      tags: *ref_49
  /hris/employerbenefit:
    get:
      operationId: getEmployerBenefits
      summary: List a batch of EmployerBenefits
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmployerBenefitOutput'
      tags: &ref_50
        - hris/employerbenefit
  /hris/employerbenefit/{id}:
    get:
      operationId: getEmployerBenefit
      summary: Retrieve a EmployerBenefit
      description: Retrieve a employerbenefit from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the employerbenefit you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmployerBenefitOutput'
      tags: *ref_50
  /hris/employment:
    get:
      operationId: getEmployments
      summary: List a batch of Employments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmploymentOutput'
      tags: &ref_51
        - hris/employment
  /hris/employment/{id}:
    get:
      operationId: getEmployment
      summary: Retrieve a Employment
      description: Retrieve a employment from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the employment you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmploymentOutput'
      tags: *ref_51
  /hris/group:
    get:
      operationId: getGroups
      summary: List a batch of Groups
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedGroupOutput'
      tags: &ref_52
        - hris/group
  /hris/group/{id}:
    get:
      operationId: getGroup
      summary: Retrieve a Group
      description: Retrieve a group from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the group you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedGroupOutput'
      tags: *ref_52
  /hris/location:
    get:
      operationId: getLocations
      summary: List a batch of Locations
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedLocationOutput'
      tags: &ref_53
        - hris/location
  /hris/location/{id}:
    get:
      operationId: getLocation
      summary: Retrieve a Location
      description: Retrieve a location from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the location you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedLocationOutput'
      tags: *ref_53
  /hris/paygroup:
    get:
      operationId: getPayGroups
      summary: List a batch of PayGroups
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPayGroupOutput'
      tags: &ref_54
        - hris/paygroup
  /hris/paygroup/{id}:
    get:
      operationId: getPayGroup
      summary: Retrieve a PayGroup
      description: Retrieve a paygroup from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the paygroup you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPayGroupOutput'
      tags: *ref_54
  /hris/payrollrun:
    get:
      operationId: getPayrollRuns
      summary: List a batch of PayrollRuns
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPayrollRunOutput'
      tags:
        - hris/payrollrun
  /hris/timeoff:
    get:
      operationId: getTimeoffs
      summary: List a batch of Timeoffs
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTimeoffOutput'
      tags: &ref_55
        - hris/timeoff
    post:
      operationId: addTimeoff
      summary: Create a Timeoff
      description: Create a timeoff in any supported Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedTimeoffInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTimeoffOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTimeoffOutput'
      tags: *ref_55
  /hris/timeoff/{id}:
    get:
      operationId: getTimeoff
      summary: Retrieve a Timeoff
      description: Retrieve a timeoff from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the timeoff you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTimeoffOutput'
      tags: *ref_55
  /hris/timeoffbalance:
    get:
      operationId: getTimeoffBalances
      summary: List a batch of TimeoffBalances
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTimeoffBalanceOutput'
      tags: &ref_56
        - hris/timeoffbalance
  /hris/timeoffbalance/{id}:
    get:
      operationId: getTimeoffBalance
      summary: Retrieve a TimeoffBalance
      description: Retrieve a timeoffbalance from any connected Hris software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the timeoffbalance you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Hris software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTimeoffBalanceOutput'
      tags: *ref_56
  /marketingautomation/action:
    get:
      operationId: getActions
      summary: List a batch of Actions
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedActionOutput'
      tags: &ref_57
        - marketingautomation/action
    post:
      operationId: addAction
      summary: Create a Action
      description: Create a action in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedActionInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedActionOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedActionOutput'
      tags: *ref_57
  /marketingautomation/action/{id}:
    get:
      operationId: getAction
      summary: Retrieve a Action
      description: Retrieve a action from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the action you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedActionOutput'
      tags: *ref_57
  /marketingautomation/automation:
    get:
      operationId: getAutomations
      summary: List a batch of Automations
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAutomationOutput'
      tags: &ref_58
        - marketingautomation/automation
    post:
      operationId: addAutomation
      summary: Create a Automation
      description: Create a automation in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAutomationInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAutomationOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAutomationOutput'
      tags: *ref_58
  /marketingautomation/automation/{id}:
    get:
      operationId: getAutomation
      summary: Retrieve a Automation
      description: Retrieve a automation from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the automation you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAutomationOutput'
      tags: *ref_58
  /marketingautomation/campaign:
    get:
      operationId: getCampaigns
      summary: List a batch of Campaigns
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCampaignOutput'
      tags: &ref_59
        - marketingautomation/campaign
    post:
      operationId: addCampaign
      summary: Create a Campaign
      description: Create a campaign in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCampaignInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCampaignOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCampaignOutput'
      tags: *ref_59
  /marketingautomation/campaign/{id}:
    get:
      operationId: getCampaign
      summary: Retrieve a Campaign
      description: Retrieve a campaign from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the campaign you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCampaignOutput'
      tags: *ref_59
  /marketingautomation/contact:
    get:
      operationId: getMarketingAutomationContacts
      summary: List a batch of Contacts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
      tags: &ref_60
        - marketingautomation/contact
    post:
      operationId: addMarketingAutomationContact
      summary: Create a Contact
      description: Create a contact in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedContactInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedContactOutput'
      tags: *ref_60
  /marketingautomation/contact/{id}:
    get:
      operationId: getMarketingAutomationContact
      summary: Retrieve a Contact
      description: Retrieve a contact from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the contact you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
      tags: *ref_60
  /marketingautomation/email:
    get:
      operationId: getEmails
      summary: List a batch of Emails
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmailOutput'
      tags: &ref_61
        - marketingautomation/email
  /marketingautomation/email/{id}:
    get:
      operationId: getEmail
      summary: Retrieve a Email
      description: Retrieve a email from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the email you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEmailOutput'
      tags: *ref_61
  /marketingautomation/event:
    get:
      operationId: getMarketingAutomationEvents
      summary: List a batch of Events
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEventOutput'
      tags: &ref_62
        - marketingautomation/event
  /marketingautomation/event/{id}:
    get:
      operationId: getEvent
      summary: Retrieve a Event
      description: Retrieve a event from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the event you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEventOutput'
      tags: *ref_62
  /marketingautomation/list:
    get:
      operationId: getLists
      summary: List a batch of Lists
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedListOutput'
      tags: &ref_63
        - marketingautomation/list
    post:
      operationId: addList
      summary: Create a List
      description: Create a list in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedListInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedListOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedListOutput'
      tags: *ref_63
  /marketingautomation/list/{id}:
    get:
      operationId: getList
      summary: Retrieve a List
      description: Retrieve a list from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the list you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedListOutput'
      tags: *ref_63
  /marketingautomation/message:
    get:
      operationId: getMessages
      summary: List a batch of Messages
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedMessageOutput'
      tags: &ref_64
        - marketingautomation/message
  /marketingautomation/message/{id}:
    get:
      operationId: getMessage
      summary: Retrieve a Message
      description: Retrieve a message from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the message you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedMessageOutput'
      tags: *ref_64
  /marketingautomation/template:
    get:
      operationId: getTemplates
      summary: List a batch of Templates
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTemplateOutput'
      tags: &ref_65
        - marketingautomation/template
    post:
      operationId: addTemplate
      summary: Create a Template
      description: Create a template in any supported Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedTemplateInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTemplateOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedTemplateOutput'
      tags: *ref_65
  /marketingautomation/template/{id}:
    get:
      operationId: getTemplate
      summary: Retrieve a Template
      description: Retrieve a template from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the template you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTemplateOutput'
      tags: *ref_65
  /marketingautomation/user:
    get:
      operationId: getMarketingAutomationUsers
      summary: List a batch of Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: &ref_66
        - marketingautomation/user
  /marketingautomation/user/{id}:
    get:
      operationId: getMarketingAutomationUser
      summary: Retrieve a User
      description: Retrieve a user from any connected Marketingautomation software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the user you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: >-
            Set to true to include data from the original Marketingautomation
            software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: *ref_66
  /ats/activity:
    get:
      operationId: getActivitys
      summary: List a batch of Activitys
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedActivityOutput'
      tags: &ref_67
        - ats/activity
    post:
      operationId: addActivity
      summary: Create a Activity
      description: Create a activity in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedActivityInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedActivityOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedActivityOutput'
      tags: *ref_67
  /ats/activity/{id}:
    get:
      operationId: getActivity
      summary: Retrieve a Activity
      description: Retrieve a activity from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the activity you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedActivityOutput'
      tags: *ref_67
  /ats/application:
    get:
      operationId: getApplications
      summary: List a batch of Applications
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedApplicationOutput'
      tags: &ref_68
        - ats/application
    post:
      operationId: addApplication
      summary: Create a Application
      description: Create a application in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedApplicationInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedApplicationOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedApplicationOutput'
      tags: *ref_68
  /ats/application/{id}:
    get:
      operationId: getApplication
      summary: Retrieve a Application
      description: Retrieve a application from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the application you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedApplicationOutput'
      tags: *ref_68
  /ats/attachment:
    get:
      operationId: getAtsAttachments
      summary: List a batch of Attachments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: &ref_69
        - ats/attachment
    post:
      operationId: addAtsAttachment
      summary: Create a Attachment
      description: Create a attachment in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAttachmentInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: *ref_69
  /ats/attachment/{id}:
    get:
      operationId: getAtsAttachment
      summary: Retrieve a Attachment
      description: Retrieve a attachment from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the attachment you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: *ref_69
  /ats/candidate:
    get:
      operationId: getCandidates
      summary: List a batch of Candidates
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCandidateOutput'
      tags: &ref_70
        - ats/candidate
    post:
      operationId: addCandidate
      summary: Create a Candidate
      description: Create a candidate in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedCandidateInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCandidateOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedCandidateOutput'
      tags: *ref_70
  /ats/candidate/{id}:
    get:
      operationId: getCandidate
      summary: Retrieve a Candidate
      description: Retrieve a candidate from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the candidate you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCandidateOutput'
      tags: *ref_70
  /ats/department:
    get:
      operationId: getDepartments
      summary: List a batch of Departments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDepartmentOutput'
      tags: &ref_71
        - ats/department
  /ats/department/{id}:
    get:
      operationId: getDepartment
      summary: Retrieve a Department
      description: Retrieve a department from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the department you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDepartmentOutput'
      tags: *ref_71
  /ats/interview:
    get:
      operationId: getInterviews
      summary: List a batch of Interviews
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedInterviewOutput'
      tags: &ref_72
        - ats/interview
    post:
      operationId: addInterview
      summary: Create a Interview
      description: Create a interview in any supported Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedInterviewInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedInterviewOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedInterviewOutput'
      tags: *ref_72
  /ats/interview/{id}:
    get:
      operationId: getInterview
      summary: Retrieve a Interview
      description: Retrieve a interview from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the interview you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedInterviewOutput'
      tags: *ref_72
  /ats/jobinterviewstage:
    get:
      operationId: getJobInterviewStages
      summary: List a batch of JobInterviewStages
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedJobInterviewStageOutput'
      tags: &ref_73
        - ats/jobinterviewstage
  /ats/jobinterviewstage/{id}:
    get:
      operationId: getJobInterviewStage
      summary: Retrieve a JobInterviewStage
      description: Retrieve a jobinterviewstage from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the jobinterviewstage you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedJobInterviewStageOutput'
      tags: *ref_73
  /ats/job:
    get:
      operationId: getJobs
      summary: List a batch of Jobs
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedJobOutput'
      tags: &ref_74
        - ats/job
  /ats/job/{id}:
    get:
      operationId: getJob
      summary: Retrieve a Job
      description: Retrieve a job from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the job you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedJobOutput'
      tags: *ref_74
  /ats/offer:
    get:
      operationId: getOffers
      summary: List a batch of Offers
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedOfferOutput'
      tags: &ref_75
        - ats/offer
  /ats/offer/{id}:
    get:
      operationId: getOffer
      summary: Retrieve a Offer
      description: Retrieve a offer from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the offer you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedOfferOutput'
      tags: *ref_75
  /ats/office:
    get:
      operationId: getOffices
      summary: List a batch of Offices
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedOfficeOutput'
      tags: &ref_76
        - ats/office
  /ats/office/{id}:
    get:
      operationId: getOffice
      summary: Retrieve a Office
      description: Retrieve a office from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the office you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedOfficeOutput'
      tags: *ref_76
  /ats/rejectreason:
    get:
      operationId: getRejectReasons
      summary: List a batch of RejectReasons
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedRejectReasonOutput'
      tags: &ref_77
        - ats/rejectreason
  /ats/rejectreason/{id}:
    get:
      operationId: getRejectReason
      summary: Retrieve a RejectReason
      description: Retrieve a rejectreason from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the rejectreason you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedRejectReasonOutput'
      tags: *ref_77
  /ats/scorecard:
    get:
      operationId: getScoreCards
      summary: List a batch of ScoreCards
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedScoreCardOutput'
      tags: &ref_78
        - ats/scorecard
  /ats/scorecard/{id}:
    get:
      operationId: getScoreCard
      summary: Retrieve a ScoreCard
      description: Retrieve a scorecard from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the scorecard you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedScoreCardOutput'
      tags: *ref_78
  /ats/tag:
    get:
      operationId: getAtsTags
      summary: List a batch of Tags
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTagOutput'
      tags: &ref_79
        - ats/tag
  /ats/tag/{id}:
    get:
      operationId: getAtsTag
      summary: Retrieve a Tag
      description: Retrieve a tag from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the tag you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTagOutput'
      tags: *ref_79
  /ats/user:
    get:
      operationId: getAtsUsers
      summary: List a batch of Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: &ref_80
        - ats/user
  /ats/user/{id}:
    get:
      operationId: getAtsUser
      summary: Retrieve a User
      description: Retrieve a user from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the user you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: *ref_80
  /ats/eeocs:
    get:
      operationId: getEeocss
      summary: List a batch of Eeocss
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEeocsOutput'
      tags: &ref_81
        - ats/eeocs
  /ats/eeocs/{id}:
    get:
      operationId: getEeocs
      summary: Retrieve a Eeocs
      description: Retrieve a eeocs from any connected Ats software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the eeocs you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ats software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedEeocsOutput'
      tags: *ref_81
  /accounting/account:
    get:
      operationId: getAccountingAccounts
      summary: List a batch of Accounts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAccountOutput'
      tags: &ref_82
        - accounting/account
    post:
      operationId: addAccount
      summary: Create a Account
      description: Create a account in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAccountInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAccountOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAccountOutput'
      tags: *ref_82
  /accounting/account/{id}:
    get:
      operationId: getAccountingAccount
      summary: Retrieve a Account
      description: Retrieve a account from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the account you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAccountOutput'
      tags: *ref_82
  /accounting/address:
    get:
      operationId: getAddresss
      summary: List a batch of Addresss
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAddressOutput'
      tags: &ref_83
        - accounting/address
  /accounting/address/{id}:
    get:
      operationId: getAddress
      summary: Retrieve a Address
      description: Retrieve a address from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the address you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAddressOutput'
      tags: *ref_83
  /accounting/attachment:
    get:
      operationId: getAccountingAttachments
      summary: List a batch of Attachments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: &ref_84
        - accounting/attachment
    post:
      operationId: addAccountingAttachment
      summary: Create a Attachment
      description: Create a attachment in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAttachmentInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: *ref_84
  /accounting/attachment/{id}:
    get:
      operationId: getAccountingAttachment
      summary: Retrieve a Attachment
      description: Retrieve a attachment from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the attachment you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: *ref_84
  /accounting/balancesheet:
    get:
      operationId: getBalanceSheets
      summary: List a batch of BalanceSheets
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedBalanceSheetOutput'
      tags: &ref_85
        - accounting/balancesheet
  /accounting/balancesheet/{id}:
    get:
      operationId: getBalanceSheet
      summary: Retrieve a BalanceSheet
      description: Retrieve a balancesheet from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the balancesheet you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedBalanceSheetOutput'
      tags: *ref_85
  /accounting/cashflowstatement:
    get:
      operationId: getCashflowStatements
      summary: List a batch of CashflowStatements
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCashflowStatementOutput'
      tags: &ref_86
        - accounting/cashflowstatement
  /accounting/cashflowstatement/{id}:
    get:
      operationId: getCashflowStatement
      summary: Retrieve a CashflowStatement
      description: Retrieve a cashflowstatement from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the cashflowstatement you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCashflowStatementOutput'
      tags: *ref_86
  /accounting/companyinfo:
    get:
      operationId: getCompanyInfos
      summary: List a batch of CompanyInfos
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCompanyInfoOutput'
      tags: &ref_87
        - accounting/companyinfo
  /accounting/companyinfo/{id}:
    get:
      operationId: getCompanyInfo
      summary: Retrieve a CompanyInfo
      description: Retrieve a companyinfo from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the companyinfo you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCompanyInfoOutput'
      tags: *ref_87
  /accounting/contact:
    get:
      operationId: getAccountingContacts
      summary: List a batch of Contacts
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
      tags: &ref_88
        - accounting/contact
    post:
      operationId: addAccountingContact
      summary: Create a Contact
      description: Create a contact in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedContactInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedContactOutput'
      tags: *ref_88
  /accounting/contact/{id}:
    get:
      operationId: getAccountingContact
      summary: Retrieve a Contact
      description: Retrieve a contact from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the contact you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedContactOutput'
      tags: *ref_88
  /accounting/creditnote:
    get:
      operationId: getCreditNotes
      summary: List a batch of CreditNotes
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCreditNoteOutput'
      tags: &ref_89
        - accounting/creditnote
  /accounting/creditnote/{id}:
    get:
      operationId: getCreditNote
      summary: Retrieve a CreditNote
      description: Retrieve a creditnote from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the creditnote you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedCreditNoteOutput'
      tags: *ref_89
  /accounting/expense:
    get:
      operationId: getExpenses
      summary: List a batch of Expenses
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedExpenseOutput'
      tags: &ref_90
        - accounting/expense
    post:
      operationId: addExpense
      summary: Create a Expense
      description: Create a expense in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedExpenseInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedExpenseOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedExpenseOutput'
      tags: *ref_90
  /accounting/expense/{id}:
    get:
      operationId: getExpense
      summary: Retrieve a Expense
      description: Retrieve a expense from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the expense you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedExpenseOutput'
      tags: *ref_90
  /accounting/incomestatement:
    get:
      operationId: getIncomeStatements
      summary: List a batch of IncomeStatements
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedIncomeStatementOutput'
      tags: &ref_91
        - accounting/incomestatement
  /accounting/incomestatement/{id}:
    get:
      operationId: getIncomeStatement
      summary: Retrieve a IncomeStatement
      description: Retrieve a incomestatement from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the incomestatement you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedIncomeStatementOutput'
      tags: *ref_91
  /accounting/invoice:
    get:
      operationId: getInvoices
      summary: List a batch of Invoices
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedInvoiceOutput'
      tags: &ref_92
        - accounting/invoice
    post:
      operationId: addInvoice
      summary: Create a Invoice
      description: Create a invoice in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedInvoiceInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedInvoiceOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedInvoiceOutput'
      tags: *ref_92
  /accounting/invoice/{id}:
    get:
      operationId: getInvoice
      summary: Retrieve a Invoice
      description: Retrieve a invoice from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the invoice you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedInvoiceOutput'
      tags: *ref_92
  /accounting/item:
    get:
      operationId: getItems
      summary: List a batch of Items
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedItemOutput'
      tags: &ref_93
        - accounting/item
  /accounting/item/{id}:
    get:
      operationId: getItem
      summary: Retrieve a Item
      description: Retrieve a item from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the item you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedItemOutput'
      tags: *ref_93
  /accounting/journalentry:
    get:
      operationId: getJournalEntrys
      summary: List a batch of JournalEntrys
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedJournalEntryOutput'
      tags: &ref_94
        - accounting/journalentry
    post:
      operationId: addJournalEntry
      summary: Create a JournalEntry
      description: Create a journalentry in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedJournalEntryInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedJournalEntryOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedJournalEntryOutput'
      tags: *ref_94
  /accounting/journalentry/{id}:
    get:
      operationId: getJournalEntry
      summary: Retrieve a JournalEntry
      description: Retrieve a journalentry from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the journalentry you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedJournalEntryOutput'
      tags: *ref_94
  /accounting/payment:
    get:
      operationId: getPayments
      summary: List a batch of Payments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPaymentOutput'
      tags: &ref_95
        - accounting/payment
    post:
      operationId: addPayment
      summary: Create a Payment
      description: Create a payment in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedPaymentInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPaymentOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedPaymentOutput'
      tags: *ref_95
  /accounting/payment/{id}:
    get:
      operationId: getPayment
      summary: Retrieve a Payment
      description: Retrieve a payment from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the payment you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPaymentOutput'
      tags: *ref_95
  /accounting/phonenumber:
    get:
      operationId: getPhoneNumbers
      summary: List a batch of PhoneNumbers
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPhoneNumberOutput'
      tags: &ref_96
        - accounting/phonenumber
  /accounting/phonenumber/{id}:
    get:
      operationId: getPhoneNumber
      summary: Retrieve a PhoneNumber
      description: Retrieve a phonenumber from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the phonenumber you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPhoneNumberOutput'
      tags: *ref_96
  /accounting/purchaseorder:
    get:
      operationId: getPurchaseOrders
      summary: List a batch of PurchaseOrders
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPurchaseOrderOutput'
      tags: &ref_97
        - accounting/purchaseorder
    post:
      operationId: addPurchaseOrder
      summary: Create a PurchaseOrder
      description: Create a purchaseorder in any supported Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedPurchaseOrderInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPurchaseOrderOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedPurchaseOrderOutput'
      tags: *ref_97
  /accounting/purchaseorder/{id}:
    get:
      operationId: getPurchaseOrder
      summary: Retrieve a PurchaseOrder
      description: Retrieve a purchaseorder from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the purchaseorder you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedPurchaseOrderOutput'
      tags: *ref_97
  /accounting/taxrate:
    get:
      operationId: getTaxRates
      summary: List a batch of TaxRates
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTaxRateOutput'
      tags: &ref_98
        - accounting/taxrate
  /accounting/taxrate/{id}:
    get:
      operationId: getTaxRate
      summary: Retrieve a TaxRate
      description: Retrieve a taxrate from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the taxrate you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTaxRateOutput'
      tags: *ref_98
  /accounting/trackingcategory:
    get:
      operationId: getTrackingCategorys
      summary: List a batch of TrackingCategorys
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTrackingCategoryOutput'
      tags: &ref_99
        - accounting/trackingcategory
  /accounting/trackingcategory/{id}:
    get:
      operationId: getTrackingCategory
      summary: Retrieve a TrackingCategory
      description: Retrieve a trackingcategory from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the trackingcategory you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTrackingCategoryOutput'
      tags: *ref_99
  /accounting/transaction:
    get:
      operationId: getTransactions
      summary: List a batch of Transactions
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTransactionOutput'
      tags: &ref_100
        - accounting/transaction
  /accounting/transaction/{id}:
    get:
      operationId: getTransaction
      summary: Retrieve a Transaction
      description: Retrieve a transaction from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the transaction you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedTransactionOutput'
      tags: *ref_100
  /accounting/vendorcredit:
    get:
      operationId: getVendorCredits
      summary: List a batch of VendorCredits
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedVendorCreditOutput'
      tags: &ref_101
        - accounting/vendorcredit
  /accounting/vendorcredit/{id}:
    get:
      operationId: getVendorCredit
      summary: Retrieve a VendorCredit
      description: Retrieve a vendorcredit from any connected Accounting software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the vendorcredit you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Accounting software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedVendorCreditOutput'
      tags: *ref_101
  /filestorage/drives:
    get:
      operationId: getDrives
      summary: List a batch of Drives
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDriveOutput'
      tags: &ref_102
        - filestorage/drives
  /filestorage/drives/{id}:
    get:
      operationId: getDrive
      summary: Retrieve a Drive
      description: Retrieve a drive from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the drive you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedDriveOutput'
      tags: *ref_102
  /filestorage/files:
    get:
      operationId: getFiles
      summary: List a batch of Files
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedFileOutput'
      tags: &ref_103
        - filestorage/files
    post:
      operationId: addFile
      summary: Create a File
      description: Create a file in any supported Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: true
          in: query
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedFileInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedFileOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFileOutput'
      tags: *ref_103
  /filestorage/files/{id}:
    get:
      operationId: getFile
      summary: Retrieve a File
      description: Retrieve a file from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the file you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedFileOutput'
      tags: *ref_103
  /filestorage/folders:
    get:
      operationId: getFolders
      summary: List a batch of Folders
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedFolderOutput'
      tags: &ref_104
        - filestorage/folders
    post:
      operationId: addFolder
      summary: Create a Folder
      description: Create a folder in any supported Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: true
          in: query
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedFolderInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedFolderOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedFolderOutput'
      tags: *ref_104
  /filestorage/folders/{id}:
    get:
      operationId: getFolder
      summary: Retrieve a Folder
      description: Retrieve a folder from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the folder you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedFolderOutput'
      tags: *ref_104
  /filestorage/groups:
    get:
      operationId: list
      summary: List a batch of Groups
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedGroupOutput'
      tags: &ref_105
        - filestorage/groups
  /filestorage/groups/{id}:
    get:
      operationId: retrieve
      summary: Retrieve a Group
      description: Retrieve a permission from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the permission you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedGroupOutput'
      tags: *ref_105
  /filestorage/users:
    get:
      operationId: list
      summary: List a batch of Users
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: &ref_106
        - filestorage/users
  /filestorage/users/{id}:
    get:
      operationId: retrieve
      summary: Retrieve a User
      description: Retrieve a permission from any connected Filestorage software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the permission you want to retrieve.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original File Storage software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedUserOutput'
      tags: *ref_106
  /ticketing/attachments:
    get:
      operationId: getTicketingAttachments
      summary: List a batch of Attachments
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original software.
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Set to get the number of records.
          schema:
            default: 50
            type: number
        - name: cursor
          required: false
          in: query
          description: Set to get the number of records after this cursor.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: &ref_107
        - ticketing/attachments
      security: &ref_108
        - JWT: []
    post:
      operationId: addTicketingAttachment
      summary: Create a Attachment
      description: Create a attachment in any supported Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnifiedAttachmentInput'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: *ref_107
      security: *ref_108
  /ticketing/attachments/{id}:
    get:
      operationId: getTicketingAttachment
      summary: Retrieve a Attachment
      description: Retrieve a attachment from any connected Ticketing software
      parameters:
        - name: x-connection-token
          required: true
          in: header
          description: The connection token
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: id of the attachment you want to retrive.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: *ref_107
      security: *ref_108
  /ticketing/attachments/{id}/download:
    get:
      operationId: downloadAttachment
      summary: Download a Attachment
      description: Download a attachment from any connected Ticketing software
      parameters:
        - name: id
          required: true
          in: path
          description: id of the attachment you want to retrive.
          schema:
            type: string
        - name: remote_data
          required: false
          in: query
          description: Set to true to include data from the original Ticketing software.
          schema:
            type: boolean
        - name: x-connection-token
          in: header
          description: The connection token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - properties:
                      data:
                        $ref: '#/components/schemas/UnifiedAttachmentOutput'
      tags: *ref_107
      security: *ref_108
info:
  title: Unified Panora API
  description: The Panora API description
  version: '1.0'
  contact: {}
tags: []
servers:
  - url: https://api.panora.dev
    description: Production server
  - url: https://api-sandbox.panora.dev
    description: Sandbox server
components:
  securitySchemes:
    JWT:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        strategy:
          type: string
        password_hash:
          type: string
        id_organisation:
          type: string
      required:
        - first_name
        - last_name
        - email
        - strategy
    LoginDto:
      type: object
      properties:
        id_user:
          type: string
        email:
          type: string
        password_hash:
          type: string
      required:
        - email
        - password_hash
    VerifyUserDto:
      type: object
      properties:
        id_user:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
      required:
        - id_user
        - email
        - first_name
        - last_name
    ApiKeyDto:
      type: object
      properties:
        projectId:
          type: string
        userId:
          type: string
        keyName:
          type: string
      required:
        - projectId
        - userId
        - keyName
    RefreshDto:
      type: object
      properties:
        projectId:
          type: string
      required:
        - projectId
    BodyDataType:
      type: object
      properties: {}
    WebhookDto:
      type: object
      properties:
        url:
          type: string
        description:
          type: string
        id_project:
          type: string
        scope:
          type: array
          items:
            type: string
      required:
        - url
        - id_project
        - scope
    SignatureVerificationDto:
      type: object
      properties:
        signature:
          type: string
        secret:
          type: string
      required:
        - signature
        - secret
    ManagedWebhooksDto:
      type: object
      properties:
        id_connection:
          type: string
        scopes:
          type: array
          items:
            type: string
        api_version:
          type: string
        remote_signature_secret:
          type: string
      required:
        - id_connection
        - scopes
    RemoteThirdPartyCreationDto:
      type: object
      properties:
        id_connection:
          type: string
        mw_ids:
          type: array
          items:
            type: string
      required:
        - id_connection
        - mw_ids
    ApiResponse:
      type: object
      properties:
        message:
          type: string
        error:
          type: string
        statusCode:
          type: number
      required:
        - statusCode
    UnifiedCommentInput:
      type: object
      properties:
        body:
          type: string
          description: The body of the comment
        html_body:
          type: string
          description: The html body of the comment
        is_private:
          type: boolean
          description: The public status of the comment
        creator_type:
          type: string
          description: >-
            The creator type of the comment. Authorized values are either USER
            or CONTACT
        ticket_id:
          type: string
          description: The UUID of the ticket the comment is tied to
        contact_id:
          type: string
          description: >-
            The UUID of the contact which the comment belongs to (if no user_id
            specified)
        user_id:
          type: string
          description: >-
            The UUID of the user which the comment belongs to (if no contact_id
            specified)
        attachments:
          description: The attachements UUIDs tied to the comment
          type: array
          items:
            type: string
      required:
        - body
    UnifiedTicketOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the ticket
        status:
          type: string
          description: The status of the ticket. Authorized values are OPEN or CLOSED.
        description:
          type: string
          description: The description of the ticket
        due_date:
          format: date-time
          type: string
          description: The date the ticket is due
        type:
          type: string
          description: >-
            The type of the ticket. Authorized values are PROBLEM, QUESTION, or
            TASK
        parent_ticket:
          type: string
          description: The UUID of the parent ticket
        collections:
          type: string
          description: The collection UUIDs the ticket belongs to
        tags:
          description: The tags names of the ticket
          type: array
          items:
            type: string
        completed_at:
          format: date-time
          type: string
          description: The date the ticket has been completed
        priority:
          type: string
          description: >-
            The priority of the ticket. Authorized values are HIGH, MEDIUM or
            LOW.
        assigned_to:
          description: The users UUIDs the ticket is assigned to
          type: array
          items:
            type: string
        comment:
          description: The comment of the ticket
          allOf:
            - $ref: '#/components/schemas/UnifiedCommentInput'
        account_id:
          type: string
          description: The UUID of the account which the ticket belongs to
        contact_id:
          type: string
          description: The UUID of the contact which the ticket belongs to
        attachments:
          description: The attachements UUIDs tied to the ticket
          type: array
          items:
            type: string
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the ticket
        remote_id:
          type: string
          description: The id of the ticket in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - description
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedTicketInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the ticket
        status:
          type: string
          description: The status of the ticket. Authorized values are OPEN or CLOSED.
        description:
          type: string
          description: The description of the ticket
        due_date:
          format: date-time
          type: string
          description: The date the ticket is due
        type:
          type: string
          description: >-
            The type of the ticket. Authorized values are PROBLEM, QUESTION, or
            TASK
        parent_ticket:
          type: string
          description: The UUID of the parent ticket
        collections:
          type: string
          description: The collection UUIDs the ticket belongs to
        tags:
          description: The tags names of the ticket
          type: array
          items:
            type: string
        completed_at:
          format: date-time
          type: string
          description: The date the ticket has been completed
        priority:
          type: string
          description: >-
            The priority of the ticket. Authorized values are HIGH, MEDIUM or
            LOW.
        assigned_to:
          description: The users UUIDs the ticket is assigned to
          type: array
          items:
            type: string
        comment:
          description: The comment of the ticket
          allOf:
            - $ref: '#/components/schemas/UnifiedCommentInput'
        account_id:
          type: string
          description: The UUID of the account which the ticket belongs to
        contact_id:
          type: string
          description: The UUID of the contact which the ticket belongs to
        attachments:
          description: The attachements UUIDs tied to the ticket
          type: array
          items:
            type: string
        field_mappings:
          type: object
          properties: {}
      required:
        - name
        - description
        - field_mappings
    UnifiedUserOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the user
        email:
          type: string
          description: The email of the user
        is_me:
          type: boolean
          description: Whether the user is the one who linked this account.
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the user
        remote_id:
          type: string
          description: The id of the user in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - email
        - is_me
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedAccountOutput:
      type: object
      properties: {}
    UnifiedContactOutput:
      type: object
      properties: {}
    Email:
      type: object
      properties:
        email_address:
          type: string
          description: The email address
        email_address_type:
          type: string
          description: >-
            The email address type. Authorized values are either PERSONAL or
            WORK.
        owner_type:
          type: string
          description: The owner type of an email
      required:
        - email_address
        - email_address_type
    Address:
      type: object
      properties:
        street_1:
          type: string
          description: The street
        street_2:
          type: string
          description: 'More information about the street '
        city:
          type: string
          description: The city
        state:
          type: string
          description: The state
        postal_code:
          type: string
          description: The postal code
        country:
          type: string
          description: The country
        address_type:
          type: string
          description: The address type. Authorized values are either PERSONAL or WORK.
        owner_type:
          type: string
          description: The owner type of the address
      required:
        - street_1
        - street_2
        - city
        - state
        - postal_code
        - country
        - address_type
        - owner_type
    Phone:
      type: object
      properties:
        phone_number:
          type: string
          description: >-
            The phone number starting with a plus (+) followed by the country
            code (e.g +336676778890 for France)
        phone_type:
          type: string
          description: The phone type. Authorized values are either MOBILE or WORK
        owner_type:
          type: string
          description: The owner type of a phone number
      required:
        - phone_number
        - phone_type
    UnifiedCompanyOutput:
      type: object
      properties: {}
    UnifiedCompanyInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the company
        industry:
          type: string
          description: >-
            The industry of the company. Authorized values can be found in the
            Industry enum.
        number_of_employees:
          type: number
          description: The number of employees of the company
        user_id:
          type: string
          description: The UUID of the user who owns the company
        email_addresses:
          description: The email addresses of the company
          type: array
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          description: The addresses of the company
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          description: The phone numbers of the company
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        field_mappings:
          type: object
          properties: {}
      required:
        - name
        - field_mappings
    UnifiedContactInput:
      type: object
      properties: {}
    UnifiedDealOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the deal
        description:
          type: string
          description: The description of the deal
        amount:
          type: number
          description: The amount of the deal
        user_id:
          type: string
          description: The UUID of the user who is on the deal
        stage_id:
          type: string
          description: The UUID of the stage of the deal
        company_id:
          type: string
          description: The UUID of the company tied to the deal
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the deal
        remote_id:
          type: string
          description: The id of the deal in the context of the Crm 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - description
        - amount
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedDealInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the deal
        description:
          type: string
          description: The description of the deal
        amount:
          type: number
          description: The amount of the deal
        user_id:
          type: string
          description: The UUID of the user who is on the deal
        stage_id:
          type: string
          description: The UUID of the stage of the deal
        company_id:
          type: string
          description: The UUID of the company tied to the deal
        field_mappings:
          type: object
          properties: {}
      required:
        - name
        - description
        - amount
        - field_mappings
    UnifiedEngagementOutput:
      type: object
      properties:
        content:
          type: string
          description: The content of the engagement
        direction:
          type: string
          description: >-
            The direction of the engagement. Authorized values are INBOUND or
            OUTBOUND
        subject:
          type: string
          description: The subject of the engagement
        start_at:
          format: date-time
          type: string
          description: The start time of the engagement
        end_time:
          format: date-time
          type: string
          description: The end time of the engagement
        type:
          type: string
          description: >-
            The type of the engagement. Authorized values are EMAIL, CALL or
            MEETING
        user_id:
          type: string
          description: The UUID of the user tied to the engagement
        company_id:
          type: string
          description: The UUID of the company tied to the engagement
        contacts:
          description: The UUIDs of contacts tied to the engagement object
          type: array
          items:
            type: string
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the engagement
        remote_id:
          type: string
          description: The id of the engagement in the context of the Crm 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - type
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedEngagementInput:
      type: object
      properties:
        content:
          type: string
          description: The content of the engagement
        direction:
          type: string
          description: >-
            The direction of the engagement. Authorized values are INBOUND or
            OUTBOUND
        subject:
          type: string
          description: The subject of the engagement
        start_at:
          format: date-time
          type: string
          description: The start time of the engagement
        end_time:
          format: date-time
          type: string
          description: The end time of the engagement
        type:
          type: string
          description: >-
            The type of the engagement. Authorized values are EMAIL, CALL or
            MEETING
        user_id:
          type: string
          description: The UUID of the user tied to the engagement
        company_id:
          type: string
          description: The UUID of the company tied to the engagement
        contacts:
          description: The UUIDs of contacts tied to the engagement object
          type: array
          items:
            type: string
        field_mappings:
          type: object
          properties: {}
      required:
        - type
        - field_mappings
    UnifiedNoteOutput:
      type: object
      properties:
        content:
          type: string
          description: The content of the note
        user_id:
          type: string
          description: The UUID of the user tied the note
        company_id:
          type: string
          description: The UUID of the company tied to the note
        contact_id:
          type: string
          description: The UUID fo the contact tied to the note
        deal_id:
          type: string
          description: The UUID of the deal tied to the note
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the note
        remote_id:
          type: string
          description: The id of the note in the context of the Crm 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - content
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedNoteInput:
      type: object
      properties:
        content:
          type: string
          description: The content of the note
        user_id:
          type: string
          description: The UUID of the user tied the note
        company_id:
          type: string
          description: The UUID of the company tied to the note
        contact_id:
          type: string
          description: The UUID fo the contact tied to the note
        deal_id:
          type: string
          description: The UUID of the deal tied to the note
        field_mappings:
          type: object
          properties: {}
      required:
        - content
        - field_mappings
    UnifiedStageOutput:
      type: object
      properties:
        stage_name:
          type: string
          description: The name of the stage
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the stage
        remote_id:
          type: string
          description: The id of the stage in the context of the Crm 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - stage_name
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedTaskOutput:
      type: object
      properties:
        subject:
          type: string
          description: The subject of the task
        content:
          type: string
          description: The content of the task
        status:
          type: string
          description: The status of the task. Authorized values are PENDING, COMPLETED.
        due_date:
          format: date-time
          type: string
          description: The due date of the task
        finished_date:
          format: date-time
          type: string
          description: The finished date of the task
        user_id:
          type: string
          description: The UUID of the user tied to the task
        company_id:
          type: string
          description: The UUID fo the company tied to the task
        deal_id:
          type: string
          description: The UUID of the deal tied to the task
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the task
        remote_id:
          type: string
          description: The id of the task in the context of the Crm 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - subject
        - content
        - status
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedTaskInput:
      type: object
      properties:
        subject:
          type: string
          description: The subject of the task
        content:
          type: string
          description: The content of the task
        status:
          type: string
          description: The status of the task. Authorized values are PENDING, COMPLETED.
        due_date:
          format: date-time
          type: string
          description: The due date of the task
        finished_date:
          format: date-time
          type: string
          description: The finished date of the task
        user_id:
          type: string
          description: The UUID of the user tied to the task
        company_id:
          type: string
          description: The UUID fo the company tied to the task
        deal_id:
          type: string
          description: The UUID of the deal tied to the task
        field_mappings:
          type: object
          properties: {}
      required:
        - subject
        - content
        - status
        - field_mappings
    UnifiedCollectionOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the collection
        description:
          type: string
          description: The description of the collection
        collection_type:
          type: string
          description: >-
            The type of the collection. Authorized values are either PROJECT or
            LIST 
        id:
          type: string
          description: The UUID of the collection
        remote_id:
          type: string
          description: The id of the collection in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - remote_data
        - created_at
        - modified_at
    UnifiedCommentOutput:
      type: object
      properties:
        body:
          type: string
          description: The body of the comment
        html_body:
          type: string
          description: The html body of the comment
        is_private:
          type: boolean
          description: The public status of the comment
        creator_type:
          type: string
          description: >-
            The creator type of the comment. Authorized values are either USER
            or CONTACT
        ticket_id:
          type: string
          description: The UUID of the ticket the comment is tied to
        contact_id:
          type: string
          description: >-
            The UUID of the contact which the comment belongs to (if no user_id
            specified)
        user_id:
          type: string
          description: >-
            The UUID of the user which the comment belongs to (if no contact_id
            specified)
        attachments:
          description: The attachements UUIDs tied to the comment
          type: array
          items:
            type: string
        id:
          type: string
          description: The UUID of the comment
        remote_id:
          type: string
          description: The id of the comment in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - body
        - remote_data
        - created_at
        - modified_at
    UnifiedTagOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the tag
        id_ats_candidate:
          type: string
          description: The UUID of the candidate
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the tag
        remote_id:
          type: string
          description: The remote ID of the tag in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: string
          format: date-time
          description: The creation date of the tag
        modified_at:
          type: string
          format: date-time
          description: The modification date of the tag
      required:
        - field_mappings
        - remote_data
    UnifiedTeamOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the team
        description:
          type: string
          description: The description of the team
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the team
        remote_id:
          type: string
          description: The id of the team in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    CreateLinkedUserDto:
      type: object
      properties:
        linked_user_origin_id:
          type: string
        alias:
          type: string
        id_project:
          type: string
      required:
        - linked_user_origin_id
        - alias
        - id_project
    CreateBatchLinkedUserDto:
      type: object
      properties:
        linked_user_origin_ids:
          type: array
          items:
            type: string
        alias:
          type: string
        id_project:
          type: string
      required:
        - linked_user_origin_ids
        - alias
        - id_project
    CreateOrganizationDto:
      type: object
      properties:
        name:
          type: string
        stripe_customer_id:
          type: string
      required:
        - name
        - stripe_customer_id
    CreateProjectDto:
      type: object
      properties:
        name:
          type: string
        id_organization:
          type: string
        id_user:
          type: string
      required:
        - name
        - id_user
    DefineTargetFieldDto:
      type: object
      properties:
        object_type_owner:
          type: string
        name:
          type: string
        description:
          type: string
        data_type:
          type: string
      required:
        - object_type_owner
        - name
        - description
        - data_type
    CustomFieldCreateDto:
      type: object
      properties:
        object_type_owner:
          type: string
        name:
          type: string
        description:
          type: string
        data_type:
          type: string
        source_custom_field_id:
          type: string
        source_provider:
          type: string
        linked_user_id:
          type: string
      required:
        - object_type_owner
        - name
        - description
        - data_type
        - source_custom_field_id
        - source_provider
        - linked_user_id
    MapFieldToProviderDto:
      type: object
      properties:
        attributeId:
          type: string
        source_custom_field_id:
          type: string
        source_provider:
          type: string
        linked_user_id:
          type: string
      required:
        - attributeId
        - source_custom_field_id
        - source_provider
        - linked_user_id
    CreateMagicLinkDto:
      type: object
      properties:
        linked_user_origin_id:
          type: string
        email:
          type: string
        alias:
          type: string
        id_project:
          type: string
      required:
        - linked_user_origin_id
        - email
        - alias
        - id_project
    PassThroughRequestDto:
      type: object
      properties:
        method:
          enum:
            - GET
            - POST
            - PATCH
            - DELETE
            - PUT
          type: string
        path:
          type: string
        data:
          type: object
        headers:
          type: object
      required:
        - method
        - path
    PassThroughResponse:
      type: object
      properties:
        url:
          type: string
        status:
          type: number
        data:
          type: object
      required:
        - url
        - status
        - data
    CreateConnectionStrategyDto:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            type: string
      required:
        - type
        - attributes
        - values
    ToggleStrategyDto:
      type: object
      properties:
        id_cs:
          type: string
      required:
        - id_cs
    DeleteCSDto:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    UpdateCSDto:
      type: object
      properties:
        id_cs:
          type: string
        status:
          type: boolean
        attributes:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            type: string
      required:
        - id_cs
        - status
        - attributes
        - values
    ConnectionStrategyCredentials:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: string
      required:
        - type
        - attributes
    ProjectConnectorsDto:
      type: object
      properties:
        column:
          type: string
        status:
          type: boolean
      required:
        - column
        - status
    UnifiedBankInfoOutput:
      type: object
      properties: {}
    UnifiedBenefitOutput:
      type: object
      properties: {}
    UnifiedDependentOutput:
      type: object
      properties: {}
    UnifiedEmployeePayrollRunOutput:
      type: object
      properties: {}
    UnifiedEmployeeOutput:
      type: object
      properties: {}
    UnifiedEmployeeInput:
      type: object
      properties: {}
    UnifiedEmployerBenefitOutput:
      type: object
      properties: {}
    UnifiedEmploymentOutput:
      type: object
      properties: {}
    UnifiedGroupOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the group
        users:
          description: Uuids of users of the group
          type: array
          items:
            type: string
        remote_was_deleted:
          type: boolean
          description: >-
            Indicates whether or not this object has been deleted in the third
            party platform.
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the group
        remote_id:
          type: string
          description: The id of the group in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - users
        - remote_was_deleted
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedLocationOutput:
      type: object
      properties: {}
    UnifiedPayGroupOutput:
      type: object
      properties: {}
    UnifiedPayrollRunOutput:
      type: object
      properties: {}
    UnifiedTimeoffOutput:
      type: object
      properties: {}
    UnifiedTimeoffInput:
      type: object
      properties: {}
    UnifiedTimeoffBalanceOutput:
      type: object
      properties: {}
    UnifiedActionOutput:
      type: object
      properties: {}
    UnifiedActionInput:
      type: object
      properties: {}
    UnifiedAutomationOutput:
      type: object
      properties: {}
    UnifiedAutomationInput:
      type: object
      properties: {}
    UnifiedCampaignOutput:
      type: object
      properties: {}
    UnifiedCampaignInput:
      type: object
      properties: {}
    UnifiedEmailOutput:
      type: object
      properties: {}
    UnifiedEventOutput:
      type: object
      properties: {}
    UnifiedListOutput:
      type: object
      properties: {}
    UnifiedListInput:
      type: object
      properties: {}
    UnifiedMessageOutput:
      type: object
      properties: {}
    UnifiedTemplateOutput:
      type: object
      properties: {}
    UnifiedTemplateInput:
      type: object
      properties: {}
    UnifiedActivityOutput:
      type: object
      properties:
        activity_type:
          type: string
          description: The type of activity
        subject:
          type: string
          description: The subject of the activity
        body:
          type: string
          description: The body of the activity
        visibility:
          type: string
          description: The visibility of the activity
        candidate_id:
          type: string
          description: The UUID of the candidate
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the activity
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the activity
        remote_id:
          type: string
          description: The remote ID of the activity in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedActivityInput:
      type: object
      properties:
        activity_type:
          type: string
          description: The type of activity
        subject:
          type: string
          description: The subject of the activity
        body:
          type: string
          description: The body of the activity
        visibility:
          type: string
          description: The visibility of the activity
        candidate_id:
          type: string
          description: The UUID of the candidate
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the activity
        field_mappings:
          type: object
          properties: {}
      required:
        - field_mappings
    UnifiedApplicationOutput:
      type: object
      properties:
        applied_at:
          type: string
          format: date-time
          description: The application date
        rejected_at:
          type: string
          format: date-time
          description: The rejection date
        offers:
          description: The offers UUIDs for the application
          type: array
          items:
            type: string
        source:
          type: string
          description: The source of the application
        credited_to:
          type: string
          description: The UUID of the person credited for the application
        current_stage:
          type: string
          description: The UUID of the current stage of the application
        reject_reason:
          type: string
          description: The rejection reason for the application
        candidate_id:
          type: string
          description: The UUID of the candidate
        job_id:
          type: string
          description: The UUID of the job
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the application
        remote_id:
          type: string
          description: The remote ID of the application in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedApplicationInput:
      type: object
      properties:
        applied_at:
          type: string
          format: date-time
          description: The application date
        rejected_at:
          type: string
          format: date-time
          description: The rejection date
        offers:
          description: The offers UUIDs for the application
          type: array
          items:
            type: string
        source:
          type: string
          description: The source of the application
        credited_to:
          type: string
          description: The UUID of the person credited for the application
        current_stage:
          type: string
          description: The UUID of the current stage of the application
        reject_reason:
          type: string
          description: The rejection reason for the application
        candidate_id:
          type: string
          description: The UUID of the candidate
        job_id:
          type: string
          description: The UUID of the job
        field_mappings:
          type: object
          properties: {}
      required:
        - field_mappings
    UnifiedAttachmentOutput:
      type: object
      properties:
        file_name:
          type: string
          description: The file name of the attachment
        file_url:
          type: string
          description: The file url of the attachment
        uploader:
          type: string
          description: The uploader's UUID of the attachment
        ticket_id:
          type: string
          description: The UUID of the ticket the attachment is tied to
        comment_id:
          type: string
          description: The UUID of the comment the attachment is tied to
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the attachment
        remote_id:
          type: string
          description: The id of the attachment in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - file_name
        - file_url
        - uploader
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedAttachmentInput:
      type: object
      properties:
        file_name:
          type: string
          description: The file name of the attachment
        file_url:
          type: string
          description: The file url of the attachment
        uploader:
          type: string
          description: The uploader's UUID of the attachment
        ticket_id:
          type: string
          description: The UUID of the ticket the attachment is tied to
        comment_id:
          type: string
          description: The UUID of the comment the attachment is tied to
        field_mappings:
          type: object
          properties: {}
      required:
        - file_name
        - file_url
        - uploader
        - field_mappings
    UnifiedCandidateOutput:
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the candidate
        last_name:
          type: string
          description: The last name of the candidate
        company:
          type: string
          description: The company of the candidate
        title:
          type: string
          description: The title of the candidate
        locations:
          type: string
          description: The locations of the candidate
        is_private:
          type: boolean
          description: Whether the candidate is private
        email_reachable:
          type: boolean
          description: Whether the candidate is reachable by email
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the candidate
        remote_modified_at:
          type: string
          format: date-time
          description: The remote modification date of the candidate
        last_interaction_at:
          type: string
          format: date-time
          description: The last interaction date with the candidate
        attachments:
          description: The attachments UUIDs of the candidate
          type: array
          items:
            type: string
        applications:
          description: The applications UUIDs of the candidate
          type: array
          items:
            type: string
        tags:
          description: The tags of the candidate
          type: array
          items:
            type: string
        urls:
          description: >-
            The urls of the candidate, possible values for Url type are WEBSITE,
            BLOG, LINKEDIN, GITHUB, or OTHER
          type: array
          items:
            type: array
        phone_numbers:
          description: The phone numbers of the candidate
          type: array
          items:
            type: array
        email_addresses:
          description: The email addresses of the candidate
          type: array
          items:
            type: array
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the candidate
        remote_id:
          type: string
          description: The id of the candidate in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedCandidateInput:
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the candidate
        last_name:
          type: string
          description: The last name of the candidate
        company:
          type: string
          description: The company of the candidate
        title:
          type: string
          description: The title of the candidate
        locations:
          type: string
          description: The locations of the candidate
        is_private:
          type: boolean
          description: Whether the candidate is private
        email_reachable:
          type: boolean
          description: Whether the candidate is reachable by email
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the candidate
        remote_modified_at:
          type: string
          format: date-time
          description: The remote modification date of the candidate
        last_interaction_at:
          type: string
          format: date-time
          description: The last interaction date with the candidate
        attachments:
          description: The attachments UUIDs of the candidate
          type: array
          items:
            type: string
        applications:
          description: The applications UUIDs of the candidate
          type: array
          items:
            type: string
        tags:
          description: The tags of the candidate
          type: array
          items:
            type: string
        urls:
          description: >-
            The urls of the candidate, possible values for Url type are WEBSITE,
            BLOG, LINKEDIN, GITHUB, or OTHER
          type: array
          items:
            type: array
        phone_numbers:
          description: The phone numbers of the candidate
          type: array
          items:
            type: array
        email_addresses:
          description: The email addresses of the candidate
          type: array
          items:
            type: array
        field_mappings:
          type: object
          properties: {}
      required:
        - field_mappings
    UnifiedDepartmentOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the department
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the department
        remote_id:
          type: string
          description: The remote ID of the department in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedInterviewOutput:
      type: object
      properties:
        status:
          type: string
          description: The status of the interview
        application_id:
          type: string
          description: The UUID of the application
        job_interview_stage_id:
          type: string
          description: The UUID of the job interview stage
        organized_by:
          type: string
          description: The UUID of the organizer
        interviewers:
          description: The UUIDs of the interviewers
          type: array
          items:
            type: string
        location:
          type: string
          description: The location of the interview
        start_at:
          type: string
          format: date-time
          description: The start date and time of the interview
        end_at:
          type: string
          format: date-time
          description: The end date and time of the interview
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the interview
        remote_updated_at:
          type: string
          format: date-time
          description: The remote modification date of the interview
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the interview
        remote_id:
          type: string
          description: The remote ID of the interview in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedInterviewInput:
      type: object
      properties:
        status:
          type: string
          description: The status of the interview
        application_id:
          type: string
          description: The UUID of the application
        job_interview_stage_id:
          type: string
          description: The UUID of the job interview stage
        organized_by:
          type: string
          description: The UUID of the organizer
        interviewers:
          description: The UUIDs of the interviewers
          type: array
          items:
            type: string
        location:
          type: string
          description: The location of the interview
        start_at:
          type: string
          format: date-time
          description: The start date and time of the interview
        end_at:
          type: string
          format: date-time
          description: The end date and time of the interview
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the interview
        remote_updated_at:
          type: string
          format: date-time
          description: The remote modification date of the interview
        field_mappings:
          type: object
          properties: {}
      required:
        - field_mappings
    UnifiedJobInterviewStageOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the job interview stage
        stage_order:
          type: number
          description: The order of the stage
        job_id:
          type: string
          description: The UUID of the job
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the job interview stage
        remote_id:
          type: string
          description: >-
            The remote ID of the job interview stage in the context of the 3rd
            Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedJobOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the job
        description:
          type: string
          description: The description of the job
        code:
          type: string
          description: The code of the job
        status:
          type: string
          description: The status of the job
        type:
          type: string
          description: The type of the job
        confidential:
          type: boolean
          description: Whether the job is confidential
        departments:
          description: The departments UUIDs associated with the job
          type: array
          items:
            type: string
        offices:
          description: The offices UUIDs associated with the job
          type: array
          items:
            type: string
        managers:
          description: The managers UUIDs associated with the job
          type: array
          items:
            type: string
        recruiters:
          description: The recruiters UUIDs associated with the job
          type: array
          items:
            type: string
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the job
        remote_updated_at:
          type: string
          format: date-time
          description: The remote modification date of the job
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the job
        remote_id:
          type: string
          description: The remote ID of the job in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedOfferOutput:
      type: object
      properties:
        created_by:
          type: string
          description: The UUID of the creator
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the offer
        closed_at:
          type: string
          format: date-time
          description: The closing date of the offer
        sent_at:
          type: string
          format: date-time
          description: The sending date of the offer
        start_date:
          type: string
          format: date-time
          description: The start date of the offer
        status:
          type: string
          description: The status of the offer
        application_id:
          type: string
          description: The UUID of the application
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the offer
        remote_id:
          type: string
          description: The remote ID of the offer in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedOfficeOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the office
        location:
          type: string
          description: The location of the office
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the office
        remote_id:
          type: string
          description: The remote ID of the office in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedRejectReasonOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the reject reason
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the reject reason
        remote_id:
          type: string
          description: The remote ID of the reject reason in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedScoreCardOutput:
      type: object
      properties:
        overall_recommendation:
          type: string
          description: The overall recommendation
        application_id:
          type: string
          description: The UUID of the application
        interview_id:
          type: string
          description: The UUID of the interview
        remote_created_at:
          type: string
          format: date-time
          description: The remote creation date of the scorecard
        submitted_at:
          type: string
          format: date-time
          description: The submission date of the scorecard
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the scorecard
        remote_id:
          type: string
          description: The remote ID of the scorecard in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedEeocsOutput:
      type: object
      properties:
        candidate_id:
          type: string
          description: The UUID of the candidate
        submitted_at:
          type: string
          format: date-time
          description: The submission date of the EEOC
        race:
          type: string
          description: The race of the candidate
        gender:
          type: string
          description: The gender of the candidate
        veteran_status:
          type: string
          description: The veteran status of the candidate
        disability_status:
          type: string
          description: The disability status of the candidate
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the EEOC
        remote_id:
          type: string
          description: The remote ID of the EEOC in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedAccountInput:
      type: object
      properties: {}
    UnifiedAddressOutput:
      type: object
      properties: {}
    UnifiedBalanceSheetOutput:
      type: object
      properties: {}
    UnifiedCashflowStatementOutput:
      type: object
      properties: {}
    UnifiedCompanyInfoOutput:
      type: object
      properties: {}
    UnifiedCreditNoteOutput:
      type: object
      properties: {}
    UnifiedExpenseOutput:
      type: object
      properties: {}
    UnifiedExpenseInput:
      type: object
      properties: {}
    UnifiedIncomeStatementOutput:
      type: object
      properties: {}
    UnifiedInvoiceOutput:
      type: object
      properties: {}
    UnifiedInvoiceInput:
      type: object
      properties: {}
    UnifiedItemOutput:
      type: object
      properties: {}
    UnifiedJournalEntryOutput:
      type: object
      properties: {}
    UnifiedJournalEntryInput:
      type: object
      properties: {}
    UnifiedPaymentOutput:
      type: object
      properties: {}
    UnifiedPaymentInput:
      type: object
      properties: {}
    UnifiedPhoneNumberOutput:
      type: object
      properties: {}
    UnifiedPurchaseOrderOutput:
      type: object
      properties: {}
    UnifiedPurchaseOrderInput:
      type: object
      properties: {}
    UnifiedTaxRateOutput:
      type: object
      properties: {}
    UnifiedTrackingCategoryOutput:
      type: object
      properties: {}
    UnifiedTransactionOutput:
      type: object
      properties: {}
    UnifiedVendorCreditOutput:
      type: object
      properties: {}
    UnifiedDriveOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the drive
        remote_created_at:
          type: string
          description: When the third party s drive was created.
        drive_url:
          type: string
          description: The url of the drive
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the drive
        remote_id:
          type: string
          description: The id of the drive in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - remote_created_at
        - drive_url
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedFileOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the file
        file_url:
          type: string
          description: The url of the file
        mime_type:
          type: string
          description: The mime type of the file
        size:
          type: string
          description: The size of the file
        folder_id:
          type: string
          description: The UUID of the folder tied to the file
        permission:
          type: string
          description: The UUID of the permission tied to the file
        shared_link:
          type: string
          description: The UUID of the shared link tied to the file
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the file
        remote_id:
          type: string
          description: The id of the file in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - file_url
        - mime_type
        - size
        - folder_id
        - permission
        - shared_link
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedFileInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the file
        file_url:
          type: string
          description: The url of the file
        mime_type:
          type: string
          description: The mime type of the file
        size:
          type: string
          description: The size of the file
        folder_id:
          type: string
          description: The UUID of the folder tied to the file
        permission:
          type: string
          description: The UUID of the permission tied to the file
        shared_link:
          type: string
          description: The UUID of the shared link tied to the file
        field_mappings:
          type: object
          properties: {}
      required:
        - name
        - file_url
        - mime_type
        - size
        - folder_id
        - permission
        - shared_link
        - field_mappings
    UnifiedFolderOutput:
      type: object
      properties:
        name:
          type: string
          description: The name of the folder
        size:
          type: string
          description: The size of the folder
        folder_url:
          type: string
          description: The url of the folder
        description:
          type: string
          description: The description of the folder
        drive_id:
          type: string
          description: The UUID of the drive tied to the folder
        parent_folder_id:
          type: string
          description: The UUID of the parent folder
        shared_link:
          type: string
          description: The UUID of the shared link tied to the folder
        permission:
          type: string
          description: The UUID of the permission tied to the folder
        field_mappings:
          type: object
          properties: {}
        id:
          type: string
          description: The UUID of the folder
        remote_id:
          type: string
          description: The id of the folder in the context of the 3rd Party
        remote_data:
          type: object
          properties: {}
        created_at:
          type: object
          properties: {}
        modified_at:
          type: object
          properties: {}
      required:
        - name
        - size
        - folder_url
        - description
        - drive_id
        - parent_folder_id
        - shared_link
        - permission
        - field_mappings
        - remote_data
        - created_at
        - modified_at
    UnifiedFolderInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the folder
        size:
          type: string
          description: The size of the folder
        folder_url:
          type: string
          description: The url of the folder
        description:
          type: string
          description: The description of the folder
        drive_id:
          type: string
          description: The UUID of the drive tied to the folder
        parent_folder_id:
          type: string
          description: The UUID of the parent folder
        shared_link:
          type: string
          description: The UUID of the shared link tied to the folder
        permission:
          type: string
          description: The UUID of the permission tied to the folder
        field_mappings:
          type: object
          properties: {}
      required:
        - name
        - size
        - folder_url
        - description
        - drive_id
        - parent_folder_id
        - shared_link
        - permission
        - field_mappings
